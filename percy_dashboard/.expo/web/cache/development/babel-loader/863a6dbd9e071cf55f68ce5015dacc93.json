{"ast":null,"code":"import React, { useContext, useMemo } from 'react';\nimport { Path } from 'react-native-svg';\nimport Context from \"./context\";\nimport { getCirclePath } from \"./utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function DangerPath(_ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? '#FF3333' : _ref$color,\n      _ref$angle = _ref.angle,\n      angle = _ref$angle === void 0 ? 50 : _ref$angle,\n      _ref$arcWidth = _ref.arcWidth,\n      arcWidth = _ref$arcWidth === void 0 ? 4 : _ref$arcWidth,\n      lineCap = _ref.lineCap,\n      _ref$offset = _ref.offset,\n      offset = _ref$offset === void 0 ? 6 : _ref$offset;\n\n  var _useContext = useContext(Context),\n      radius = _useContext.radius,\n      globalAngle = _useContext.angle,\n      globalLineCap = _useContext.lineCap;\n\n  var circlePath = useMemo(function () {\n    return getCirclePath(radius, radius, radius - arcWidth - offset, globalAngle - angle, globalAngle);\n  }, [radius, globalAngle, angle, arcWidth, offset]);\n  return _jsx(Path, {\n    d: circlePath,\n    stroke: color,\n    strokeWidth: arcWidth,\n    strokeLinecap: lineCap || globalLineCap,\n    fill: \"transparent\"\n  });\n}","map":{"version":3,"sources":["C:/Users/black/Documents/Uni Notes/GDP/Dashboard/percy_dashboard/node_modules/react-native-cool-speedometer/src/DangerPath.js"],"names":["React","useContext","useMemo","Path","Context","getCirclePath","DangerPath","color","angle","arcWidth","lineCap","offset","radius","globalAngle","globalLineCap","circlePath"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,OAA5B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP;AACA,SAASC,aAAT;;AAEA,eAAe,SAASC,UAAT,OAMZ;AAAA,wBALDC,KAKC;AAAA,MALDA,KAKC,2BALO,SAKP;AAAA,wBAJDC,KAIC;AAAA,MAJDA,KAIC,2BAJO,EAIP;AAAA,2BAHDC,QAGC;AAAA,MAHDA,QAGC,8BAHU,CAGV;AAAA,MAFDC,OAEC,QAFDA,OAEC;AAAA,yBADDC,MACC;AAAA,MADDA,MACC,4BADQ,CACR;;AAED,oBAIIV,UAAU,CAACG,OAAD,CAJd;AAAA,MACEQ,MADF,eACEA,MADF;AAAA,MAESC,WAFT,eAEEL,KAFF;AAAA,MAGWM,aAHX,eAGEJ,OAHF;;AAMA,MAAMK,UAAU,GAAGb,OAAO,CAAC;AAAA,WAAMG,aAAa,CAC5CO,MAD4C,EAE5CA,MAF4C,EAG5CA,MAAM,GAAGH,QAAT,GAAoBE,MAHwB,EAI5CE,WAAW,GAAGL,KAJ8B,EAK5CK,WAL4C,CAAnB;AAAA,GAAD,EAMvB,CAACD,MAAD,EAASC,WAAT,EAAsBL,KAAtB,EAA6BC,QAA7B,EAAuCE,MAAvC,CANuB,CAA1B;AAQA,SACE,KAAC,IAAD;AACE,IAAA,CAAC,EAAEI,UADL;AAEE,IAAA,MAAM,EAAER,KAFV;AAGE,IAAA,WAAW,EAAEE,QAHf;AAIE,IAAA,aAAa,EAAEC,OAAO,IAAII,aAJ5B;AAKE,IAAA,IAAI,EAAC;AALP,IADF;AASD","sourcesContent":["import React, { useContext, useMemo } from 'react'\nimport { Path } from 'react-native-svg'\nimport Context from './context'\nimport { getCirclePath } from './utils'\n\nexport default function DangerPath ({\n  color = '#FF3333',\n  angle = 50,\n  arcWidth = 4,\n  lineCap,\n  offset = 6\n}) {\n\n  const {\n    radius,\n    angle: globalAngle,\n    lineCap: globalLineCap,\n  } = useContext(Context)\n\n  const circlePath = useMemo(() => getCirclePath(\n    radius,\n    radius,\n    radius - arcWidth - offset,\n    globalAngle - angle,\n    globalAngle,\n  ), [radius, globalAngle, angle, arcWidth, offset])\n\n  return (\n    <Path\n      d={circlePath}\n      stroke={color}\n      strokeWidth={arcWidth}\n      strokeLinecap={lineCap || globalLineCap}\n      fill=\"transparent\"\n    />\n  )\n}"]},"metadata":{},"sourceType":"module"}