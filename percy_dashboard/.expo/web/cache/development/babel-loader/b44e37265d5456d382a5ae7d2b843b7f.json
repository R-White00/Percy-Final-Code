{"ast":null,"code":"import React, { useContext } from 'react';\nimport { G, Polygon, Circle } from 'react-native-svg';\nimport Context from \"./context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Needle(_ref) {\n  var _ref$offset = _ref.offset,\n      offset = _ref$offset === void 0 ? 25 : _ref$offset,\n      _ref$baseWidth = _ref.baseWidth,\n      baseWidth = _ref$baseWidth === void 0 ? 6 : _ref$baseWidth,\n      _ref$baseOffset = _ref.baseOffset,\n      baseOffset = _ref$baseOffset === void 0 ? 18 : _ref$baseOffset,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'white' : _ref$color,\n      _ref$circleRadius = _ref.circleRadius,\n      circleRadius = _ref$circleRadius === void 0 ? 15 : _ref$circleRadius,\n      circleColor = _ref.circleColor,\n      children = _ref.children;\n\n  var _useContext = useContext(Context),\n      currentFillAngle = _useContext.currentFillAngle,\n      radius = _useContext.radius,\n      accentColor = _useContext.accentColor;\n\n  var bottom = radius + baseOffset;\n  var points = \"\\n    \" + (radius - baseWidth / 2) + \", \" + bottom + \" \" + (radius + baseWidth / 2) + \", \" + bottom + \" \" + radius + \", \" + offset + \"\\n  \";\n\n  var defaultNeedle = _jsxs(G, {\n    children: [_jsx(Circle, {\n      r: circleRadius,\n      cx: radius,\n      cy: radius,\n      fill: circleColor || accentColor\n    }), _jsx(Polygon, {\n      points: points,\n      fill: color,\n      strokeWidth: \"2\",\n      stroke: color,\n      style: {\n        strokeLinejoin: 'round'\n      }\n    })]\n  });\n\n  return _jsx(G, {\n    transform: \"rotate(\" + currentFillAngle + \", \" + radius + \", \" + radius + \")\",\n    children: children ? children() : defaultNeedle\n  });\n}","map":{"version":3,"sources":["C:/Users/black/Documents/Uni Notes/GDP/Dashboard/percy_dashboard/node_modules/react-native-cool-speedometer/src/Needle.js"],"names":["React","useContext","G","Polygon","Circle","Context","Needle","offset","baseWidth","baseOffset","color","circleRadius","circleColor","children","currentFillAngle","radius","accentColor","bottom","points","defaultNeedle","strokeLinejoin"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,CAAT,EAAYC,OAAZ,EAAqBC,MAArB,QAAmC,kBAAnC;AACA,OAAOC,OAAP;;;AAEA,eAAe,SAASC,MAAT,OAQZ;AAAA,yBAPDC,MAOC;AAAA,MAPDA,MAOC,4BAPQ,EAOR;AAAA,4BANDC,SAMC;AAAA,MANDA,SAMC,+BANW,CAMX;AAAA,6BALDC,UAKC;AAAA,MALDA,UAKC,gCALY,EAKZ;AAAA,wBAJDC,KAIC;AAAA,MAJDA,KAIC,2BAJO,OAIP;AAAA,+BAHDC,YAGC;AAAA,MAHDA,YAGC,kCAHc,EAGd;AAAA,MAFDC,WAEC,QAFDA,WAEC;AAAA,MADDC,QACC,QADDA,QACC;;AACD,oBAAkDZ,UAAU,CAACI,OAAD,CAA5D;AAAA,MAAQS,gBAAR,eAAQA,gBAAR;AAAA,MAA0BC,MAA1B,eAA0BA,MAA1B;AAAA,MAAkCC,WAAlC,eAAkCA,WAAlC;;AACA,MAAMC,MAAM,GAAGF,MAAM,GAAGN,UAAxB;AACA,MAAMS,MAAM,eACRH,MAAM,GAAGP,SAAS,GAAG,CADb,WACmBS,MADnB,UAC6BF,MAAM,GAAGP,SAAS,GAAG,CADlD,WACwDS,MADxD,SACkEF,MADlE,UAC6ER,MAD7E,SAAZ;;AAGA,MAAMY,aAAa,GACjB,MAAC,CAAD;AAAA,eACE,KAAC,MAAD;AACE,MAAA,CAAC,EAAER,YADL;AAEE,MAAA,EAAE,EAAEI,MAFN;AAGE,MAAA,EAAE,EAAEA,MAHN;AAIE,MAAA,IAAI,EAAEH,WAAW,IAAII;AAJvB,MADF,EAOE,KAAC,OAAD;AACE,MAAA,MAAM,EAAEE,MADV;AAEE,MAAA,IAAI,EAAER,KAFR;AAGE,MAAA,WAAW,EAAC,GAHd;AAIE,MAAA,MAAM,EAAEA,KAJV;AAKE,MAAA,KAAK,EAAE;AAACU,QAAAA,cAAc,EAAE;AAAjB;AALT,MAPF;AAAA,IADF;;AAkBA,SACE,KAAC,CAAD;AAAG,IAAA,SAAS,cAAYN,gBAAZ,UAAiCC,MAAjC,UAA4CA,MAA5C,MAAZ;AAAA,cACGF,QAAQ,GAAGA,QAAQ,EAAX,GAAgBM;AAD3B,IADF;AAKD","sourcesContent":["import React, { useContext } from 'react'\nimport { G, Polygon, Circle } from 'react-native-svg'\nimport Context from './context'\n\nexport default function Needle ({\n  offset = 25,\n  baseWidth = 6,\n  baseOffset = 18,\n  color = 'white',\n  circleRadius = 15,\n  circleColor,\n  children,\n}) {\n  const { currentFillAngle, radius, accentColor } = useContext(Context)\n  const bottom = radius + baseOffset\n  const points = `\n    ${radius - baseWidth / 2}, ${bottom} ${radius + baseWidth / 2}, ${bottom} ${radius}, ${offset}\n  `\n  const defaultNeedle = (\n    <G>\n      <Circle\n        r={circleRadius}\n        cx={radius}\n        cy={radius}\n        fill={circleColor || accentColor}\n      />\n      <Polygon\n        points={points}\n        fill={color}\n        strokeWidth=\"2\"\n        stroke={color}\n        style={{strokeLinejoin: 'round'}}\n      />\n    </G>\n  )\n\n  return (\n    <G transform={`rotate(${currentFillAngle}, ${radius}, ${radius})`}>\n      {children ? children() : defaultNeedle}\n    </G>\n  )\n}"]},"metadata":{},"sourceType":"module"}