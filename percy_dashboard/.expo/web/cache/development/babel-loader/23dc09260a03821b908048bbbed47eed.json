{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"value\", \"prefill\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport newSpeedometer from \"./Speedometer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar ClassBasedSpeedometer = function (_React$Component) {\n  _inherits(ClassBasedSpeedometer, _React$Component);\n\n  var _super = _createSuper(ClassBasedSpeedometer);\n\n  function ClassBasedSpeedometer() {\n    _classCallCheck(this, ClassBasedSpeedometer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ClassBasedSpeedometer, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(Speedometer, _objectSpread({}, this.props));\n    }\n  }]);\n\n  return ClassBasedSpeedometer;\n}(React.Component);\n\nvar ASpeedometer = Animated.createAnimatedComponent(ClassBasedSpeedometer);\n\nvar AnimatedSpeedometer = function (_React$PureComponent) {\n  _inherits(AnimatedSpeedometer, _React$PureComponent);\n\n  var _super2 = _createSuper(AnimatedSpeedometer);\n\n  function AnimatedSpeedometer(props) {\n    var _this;\n\n    _classCallCheck(this, AnimatedSpeedometer);\n\n    _this = _super2.call(this, props);\n    _this.state = {\n      fillAnimation: new Animated.Value(props.prefill)\n    };\n\n    _this.state.fillAnimation.addListener(function (_ref) {\n      var value = _ref.value;\n      props.onFillChange(value);\n    });\n\n    return _this;\n  }\n\n  _createClass(AnimatedSpeedometer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.animate();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.value !== this.props.value) {\n        this.animate();\n      }\n    }\n  }, {\n    key: \"reAnimate\",\n    value: function reAnimate(prefill, toVal, dur, ease) {\n      var _this2 = this;\n\n      this.setState({\n        fillAnimation: new Animated.Value(prefill)\n      }, function () {\n        return _this2.animate(toVal, dur, ease);\n      });\n    }\n  }, {\n    key: \"animate\",\n    value: function animate(toVal, dur, ease) {\n      var toValue = toVal >= 0 ? toVal : this.props.value;\n      var duration = dur || this.props.duration;\n      var easing = ease || this.props.easing;\n      var useNativeDriver = this.props.useNativeDriver;\n      var anim = Animated.timing(this.state.fillAnimation, {\n        useNativeDriver: useNativeDriver,\n        toValue: toValue,\n        easing: easing,\n        duration: duration\n      });\n      anim.start(this.props.onAnimationComplete);\n      return anim;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          value = _this$props.value,\n          prefill = _this$props.prefill,\n          other = _objectWithoutProperties(_this$props, _excluded);\n\n      return _jsx(ASpeedometer, _objectSpread(_objectSpread({}, other), {}, {\n        value: this.state.fillAnimation\n      }));\n    }\n  }]);\n\n  return AnimatedSpeedometer;\n}(React.PureComponent);\n\nexport { AnimatedSpeedometer as default };\nAnimatedSpeedometer.propTypes = _objectSpread(_objectSpread({}, Speedometer.propTypes), {}, {\n  prefill: PropTypes.number,\n  duration: PropTypes.number,\n  easing: PropTypes.func,\n  onFillChange: PropTypes.func,\n  onAnimationComplete: PropTypes.func,\n  useNativeDriver: PropTypes.bool\n});\nAnimatedSpeedometer.defaultProps = {\n  duration: 300,\n  easing: Easing.out(Easing.ease),\n  prefill: 0,\n  useNativeDriver: false,\n  onFillChange: function onFillChange() {}\n};","map":{"version":3,"sources":["C:/Users/black/Documents/Uni Notes/GDP/Dashboard/percy_dashboard/node_modules/react-native-cool-speedometer/src/AnimatedSpeedometer.js"],"names":["React","PropTypes","newSpeedometer","ClassBasedSpeedometer","props","Component","ASpeedometer","Animated","createAnimatedComponent","AnimatedSpeedometer","state","fillAnimation","Value","prefill","addListener","value","onFillChange","animate","prevProps","toVal","dur","ease","setState","toValue","duration","easing","useNativeDriver","anim","timing","start","onAnimationComplete","other","PureComponent","propTypes","Speedometer","number","func","bool","defaultProps","Easing","out"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Animated, Easing } from 'react-native'\nimport newSpeedometer from './Speedometer'\n\nclass ClassBasedSpeedometer extends React.Component {\n  render() {\n    return(\n      <Speedometer {...this.props}/>\n    )\n  }\n}\n\nconst ASpeedometer = Animated.createAnimatedComponent(ClassBasedSpeedometer)\n\nexport default class AnimatedSpeedometer extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      fillAnimation: new Animated.Value(props.prefill),\n    }\n\n    this.state.fillAnimation.addListener(({ value }) => {\n      props.onFillChange(value)\n    })\n  }\n\n  componentDidMount() {\n    this.animate()\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.value !== this.props.value) {\n      this.animate()\n    }\n  }\n\n  reAnimate(prefill, toVal, dur, ease) {\n    this.setState(\n      {\n        fillAnimation: new Animated.Value(prefill),\n      },\n      () => this.animate(toVal, dur, ease)\n    )\n  }\n\n  animate(toVal, dur, ease) {\n    const toValue = toVal >= 0 ? toVal : this.props.value\n    const duration = dur || this.props.duration\n    const easing = ease || this.props.easing\n    const useNativeDriver = this.props.useNativeDriver\n\n    const anim = Animated.timing(this.state.fillAnimation, {\n      useNativeDriver,\n      toValue,\n      easing,\n      duration,\n    })\n    anim.start(this.props.onAnimationComplete)\n\n    return anim\n  }\n\n  render() {\n    const { value, prefill, ...other } = this.props\n\n    return (\n      <ASpeedometer\n        {...other}\n        value={this.state.fillAnimation}\n      />\n    )\n  }\n}\n\nAnimatedSpeedometer.propTypes = {\n  ...Speedometer.propTypes,\n  prefill: PropTypes.number,\n  duration: PropTypes.number,\n  easing: PropTypes.func,\n  onFillChange: PropTypes.func,\n  onAnimationComplete: PropTypes.func,\n  useNativeDriver: PropTypes.bool,\n}\n\nAnimatedSpeedometer.defaultProps = {\n  duration: 300,\n  easing: Easing.out(Easing.ease),\n  prefill: 0,\n  useNativeDriver: false,\n  onFillChange: () => {}\n}"]},"metadata":{},"sourceType":"module"}