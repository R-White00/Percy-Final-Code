{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport BasicSpeedometer from 'react-native-speedometer-chart';\nimport { Line, Text as SvgText, G } from 'react-native-svg';\nimport Speedometer, { Background, Arc, Needle, Progress, Marks, Indicator, DangerPath } from 'react-native-cool-speedometer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var center = 250 / 2;\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.topBar,\n        children: _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            flexWrap: \"wrap\"\n          },\n          children: [_jsx(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsx(Text, {\n              style: {\n                color: \"#fff\",\n                fontSize: 70,\n                fontWeight: '500'\n              },\n              children: \"Percy Dashboard\"\n            })\n          }), _jsx(View, {\n            style: {\n              flex: 1,\n              alignItems: \"flex-end\",\n              flexWrap: \"wrap\"\n            },\n            children: _jsxs(View, {\n              style: {\n                flex: 1,\n                flexDirection: \"row\",\n                paddingEnd: 40\n              },\n              children: [_jsxs(View, {\n                style: {\n                  alignItems: \"center\",\n                  paddingEnd: 50\n                },\n                children: [_jsxs(Text, {\n                  style: {\n                    color: \"#fff\",\n                    fontSize: 30,\n                    fontWeight: '400',\n                    textAlign: 'center'\n                  },\n                  children: [\"Number of \", '\\n', \"Crops Targeted:\"]\n                }), _jsxs(View, {\n                  style: {\n                    flexDirection: \"row\"\n                  },\n                  children: [_jsx(MaterialCommunityIcons, {\n                    name: \"tree\",\n                    size: 50,\n                    color: \"white\",\n                    style: {\n                      alignContent: 'flex-end'\n                    }\n                  }), _jsx(Text, {\n                    style: {\n                      color: \"#fff\",\n                      fontSize: 30\n                    },\n                    children: \"    1\"\n                  })]\n                })]\n              }), _jsxs(View, {\n                style: {\n                  alignItems: \"center\"\n                },\n                children: [_jsxs(Text, {\n                  style: {\n                    color: \"#fff\",\n                    fontSize: 30,\n                    fontWeight: '400',\n                    textAlign: 'center'\n                  },\n                  children: [\"Battery \", '\\n', \"100%:\"]\n                }), _jsx(View, {\n                  style: {\n                    flexDirection: \"row\"\n                  },\n                  children: _jsx(MaterialCommunityIcons, {\n                    name: \"battery-outline\",\n                    size: 50,\n                    color: \"white\"\n                  })\n                })]\n              })]\n            })\n          })]\n        })\n      }), _jsxs(View, {\n        style: {\n          flex: 5,\n          backgroundColor: \"red\",\n          flexDirection: \"row\"\n        },\n        children: [_jsxs(View, {\n          style: {\n            flex: 4,\n            backgroundColor: \"blue\",\n            flexWrap: 'wrap'\n          },\n          children: [_jsxs(View, {\n            style: {\n              flexWrap: 'wrap',\n              flexDirection: 'row',\n              flex: 1,\n              backgroundColor: \"red\",\n              justifyContent: \"space-evenly\",\n              alignItems: \"center\",\n              alignContent: \"center\"\n            },\n            children: [_jsx(View, {\n              style: {\n                paddingTop: 90\n              },\n              children: _jsxs(Speedometer, {\n                value: 54,\n                max: 100,\n                angle: 160,\n                fontFamily: \"squada-one\",\n                accentColor: \"#03fc3d\",\n                children: [_jsx(Background, {\n                  angle: 180,\n                  color: \"#fff\"\n                }), _jsx(Arc, {}), _jsx(Needle, {\n                  color: \"#03fc3d\"\n                }), _jsx(Progress, {}), _jsx(Marks, {\n                  step: 10,\n                  lineSize: 20,\n                  children: function children(mark, i) {\n                    return _jsxs(G, {\n                      children: [mark.isEven && _jsx(SvgText, _objectSpread(_objectSpread({}, mark.textProps), {}, {\n                        textAnchor: \"middle\",\n                        alignmentBaseline: \"middle\",\n                        fontSize: 18,\n                        opacity: 0.6,\n                        fill: \"#03fc3d\",\n                        children: mark.value\n                      })), _jsx(Line, _objectSpread(_objectSpread({}, mark.coordinates), {}, {\n                        stroke: \"#03fc3d\",\n                        strokeOpacity: 1,\n                        strokeWidth: 5\n                      }))]\n                    }, i);\n                  }\n                }), _jsx(Indicator, {\n                  children: function children(value, textProps) {\n                    return _jsxs(SvgText, _objectSpread(_objectSpread({}, textProps), {}, {\n                      fontSize: 30,\n                      fill: \"#black\",\n                      x: 250 / 2,\n                      y: 170,\n                      textAnchor: \"middle\",\n                      fontFamily: \"squada-one\",\n                      color: \"black\",\n                      children: [value, \"k/m\"]\n                    }));\n                  }\n                })]\n              })\n            }), _jsx(BasicSpeedometer, {\n              value: 90,\n              totalValue: 100,\n              internalColor: \"#03fc3d\",\n              showText: true,\n              text: \"70 k/m\",\n              textStyle: {\n                color: 'black',\n                fontSize: 20\n              }\n            })]\n          }), _jsxs(View, {\n            style: {\n              flexWrap: 'wrap',\n              flexDirection: 'row',\n              flex: 1,\n              backgroundColor: \"blue\",\n              justifyContent: \"space-evenly\",\n              alignItems: \"center\",\n              alignContent: 'space-around'\n            },\n            children: [_jsx(View, {\n              style: {\n                marginTop: 90\n              },\n              children: _jsxs(Speedometer, {\n                value: 54,\n                max: 100,\n                angle: 160,\n                fontFamily: \"squada-one\",\n                accentColor: \"#03fc3d\",\n                children: [_jsx(Background, {\n                  angle: 180,\n                  color: \"#fff\"\n                }), _jsx(Arc, {}), _jsx(Needle, {\n                  color: \"#03fc3d\"\n                }), _jsx(Progress, {}), _jsx(Marks, {\n                  step: 10,\n                  lineSize: 20,\n                  children: function children(mark, i) {\n                    return _jsxs(G, {\n                      children: [mark.isEven && _jsx(SvgText, _objectSpread(_objectSpread({}, mark.textProps), {}, {\n                        textAnchor: \"middle\",\n                        alignmentBaseline: \"middle\",\n                        fontSize: 18,\n                        opacity: 0.6,\n                        fill: \"#03fc3d\",\n                        children: mark.value\n                      })), _jsx(Line, _objectSpread(_objectSpread({}, mark.coordinates), {}, {\n                        stroke: \"#03fc3d\",\n                        strokeOpacity: 1,\n                        strokeWidth: 5\n                      }))]\n                    }, i);\n                  }\n                }), _jsx(Indicator, {\n                  children: function children(value, textProps) {\n                    return _jsxs(SvgText, _objectSpread(_objectSpread({}, textProps), {}, {\n                      fontSize: 30,\n                      fill: \"#black\",\n                      x: 250 / 2,\n                      y: 170,\n                      textAnchor: \"middle\",\n                      fontFamily: \"squada-one\",\n                      color: \"black\",\n                      children: [value, \"k/m\"]\n                    }));\n                  }\n                })]\n              })\n            }), _jsx(BasicSpeedometer, {\n              value: 90,\n              totalValue: 100,\n              internalColor: \"#03fc3d\",\n              showText: true,\n              text: \"70 k/m\",\n              textStyle: {\n                color: 'black',\n                fontSize: 20\n              }\n            })]\n          }), _jsxs(View, {\n            style: {\n              flexWrap: 'wrap',\n              flexDirection: 'row',\n              flex: 1,\n              backgroundColor: \"white\",\n              justifyContent: \"space-evenly\",\n              alignItems: \"center\"\n            },\n            children: [_jsx(View, {\n              children: _jsxs(Speedometer, {\n                value: -10,\n                min: -50,\n                max: 50,\n                angle: 320,\n                accentColor: \"#03fc3d\",\n                children: [_jsx(Background, {\n                  color: \"#fff\",\n                  opacity: 0.3\n                }), _jsx(Progress, {}), _jsx(Marks, {\n                  step: 5,\n                  children: function children(mark, i) {\n                    return _jsxs(G, {\n                      children: [mark.isEven && _jsxs(SvgText, _objectSpread(_objectSpread({}, mark.textProps), {}, {\n                        textAnchor: \"middle\",\n                        alignmentBaseline: \"middle\",\n                        fontSize: 18,\n                        opacity: 0.6,\n                        fill: \"black\",\n                        children: [mark.value, \"\\xB0\"]\n                      })), _jsx(Line, _objectSpread(_objectSpread({}, mark.coordinates), {}, {\n                        stroke: \"black\",\n                        strokeOpacity: 0.4\n                      }))]\n                    }, i);\n                  }\n                }), _jsx(Needle, {\n                  baseOffset: -30,\n                  circleRadius: 0,\n                  color: \"#03fc3d\",\n                  offset: 50\n                }), _jsx(Indicator, {\n                  children: function children(value, textProps) {\n                    return _jsxs(SvgText, _objectSpread(_objectSpread({}, textProps), {}, {\n                      fontSize: 40,\n                      x: center,\n                      y: center + 10,\n                      textAnchor: \"middle\",\n                      alignmentBaseline: \"middle\",\n                      children: [value, \"\\xB0\"]\n                    }));\n                  }\n                })]\n              })\n            }), _jsx(BasicSpeedometer, {\n              value: 90,\n              totalValue: 100,\n              internalColor: \"#03fc3d\",\n              showText: true,\n              text: \"70 k/m\",\n              textStyle: {\n                color: 'black',\n                fontSize: 20\n              }\n            })]\n          })]\n        }), _jsx(View, {\n          style: {\n            flex: 0.8,\n            backgroundColor: \"green\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: _jsx(TouchableOpacity, {\n            children: _jsx(MaterialIcons, {\n              name: \"double-arrow\",\n              size: 50,\n              color: \"black\",\n              style: {\n                transform: [{\n                  rotate: '270deg'\n                }]\n              }\n            })\n          })\n        }), _jsx(View, {\n          style: {\n            flex: 4.2,\n            backgroundColor: \"orange\"\n          },\n          children: _jsx(TouchableOpacity, {\n            children: _jsx(MaterialIcons, {\n              name: \"keyboard-arrow-up\",\n              size: 50,\n              color: \"black\"\n            })\n          })\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  topBar: {\n    flex: 1,\n    flexWrap: \"wrap\",\n    backgroundColor: '#03fc3d',\n    justifyContent: 'center'\n  },\n  bottom: {\n    flex: 3,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/black/Documents/Uni Notes/GDP/Dashboard/percy_dashboard/App.js"],"names":["StatusBar","Ionicons","FontAwesome","MaterialCommunityIcons","MaterialIcons","BasicSpeedometer","Line","Text","SvgText","G","Speedometer","Background","Arc","Needle","Progress","Marks","Indicator","DangerPath","App","center","flex","styles","container","topBar","flexDirection","alignItems","flexWrap","color","fontSize","fontWeight","paddingEnd","textAlign","alignContent","backgroundColor","justifyContent","paddingTop","mark","i","isEven","textProps","value","coordinates","marginTop","transform","rotate","StyleSheet","create","bottom"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, SafeAreaView, TextInput, TouchableOpacity} from 'react-native';\n\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport BasicSpeedometer from 'react-native-speedometer-chart';\nimport { Line, Text as SvgText, G } from 'react-native-svg'\n// import RNSpeedometer from 'react-native-speedometer'\n\nimport Speedometer , {\n  Background,\n  Arc,\n  Needle,\n  Progress,\n  Marks,\n  Indicator,\n  DangerPath,\n} from 'react-native-cool-speedometer';\n\nexport default function App() {\n\n  const center = 250 / 2\n  return (\n    <SafeAreaView style={{flex:1}}>\n    <View style={styles.container}>\n\n<View style={styles.topBar}>\n  <View style={{flexDirection:\"row\", alignItems:\"center\",flexWrap:\"wrap\"}}>\n    <View style={{flex:1, }}>\n\n  <Text style={{color:\"#fff\", fontSize:70, fontWeight:'500', }}>\n    Percy Dashboard\n  </Text>\n    </View>\n\n          <View style={{flex:1, alignItems:\"flex-end\", flexWrap:\"wrap\"}}>\n            <View style={{flex:1, flexDirection:\"row\",paddingEnd:40}}> \n            <View style={{alignItems:\"center\", paddingEnd:50}}>\n\n            <Text style={{color:\"#fff\", fontSize:30, fontWeight:'400', textAlign:'center'}}>\n              Number of {'\\n'}\n              Crops Targeted:\n            </Text>\n            <View style={{flexDirection:\"row\"}}> \n            <MaterialCommunityIcons name=\"tree\" size={50} color=\"white\" style={{alignContent:'flex-end'}}/>\n            \n            <Text style={{color:\"#fff\", fontSize:30,}}>    1</Text>\n            </View>\n            </View>\n            <View style={{alignItems:\"center\"}}>\n\n            <Text style={{color:\"#fff\", fontSize:30, fontWeight:'400', textAlign:'center'}}>\n              Battery {'\\n'}\n              100%:\n            </Text>\n            <View style={{flexDirection:\"row\", }}> \n            \n            <MaterialCommunityIcons name=\"battery-outline\" size={50} color=\"white\" />    \n                    </View>\n            </View>\n            </View>\n          </View>\n     </View>\n  \n  </View>\n\n      <View style={{ flex: 5, backgroundColor: \"red\", flexDirection:\"row\" }} >\n        <View style={{ flex:4, backgroundColor:\"blue\", flexWrap:'wrap' }}>\n          <View style={{flexWrap:'wrap' ,flexDirection:'row', flex:1, backgroundColor:\"red\", justifyContent:\"space-evenly\", alignItems:\"center\", alignContent:\"center\" }}>\n          <View style={{paddingTop:90}}>\n          <Speedometer\n                value={54}\n                max={100}\n                angle={160}\n                fontFamily='squada-one'\n                accentColor=\"#03fc3d\"\n              >\n\n                <Background angle={180} color=\"#fff\" />\n                <Arc/>\n              <Needle color=\"#03fc3d\"/>\n                <Progress/>\n                {/* <Marks lineColor=\"black\" fill=\"black\" /> */}\n                <Marks step={10} lineSize={20}>\n                      {(mark, i) => (\n                        <G key={i}>\n                          {mark.isEven && (\n                            <SvgText\n                              {...mark.textProps}\n                              textAnchor=\"middle\"\n                              alignmentBaseline=\"middle\"\n                              fontSize={18}\n                              opacity={0.6}\n                              fill=\"#03fc3d\"\n                              \n                            >\n                              {mark.value}\n                            </SvgText>\n                          )}\n                          <Line\n                            {...mark.coordinates}\n                            stroke=\"#03fc3d\"\n                            strokeOpacity={1}\n                            strokeWidth={5}\n                          />\n                        </G>\n                      )}\n                    </Marks>\n                    <Indicator>\n    {(value, textProps) => (\n      <SvgText\n        {...textProps}\n        fontSize={30}\n        fill=\"#black\"\n        x={250 / 2}\n        y={170}\n        textAnchor=\"middle\"\n        fontFamily='squada-one'\n        color=\"black\"\n      >\n        {value}k/m\n      </SvgText>\n    )}\n  </Indicator>\n          </Speedometer> \n\n          </View>\n\n          <BasicSpeedometer value={90} totalValue={100} internalColor=\"#03fc3d\" showText text=\"70 k/m\" textStyle={{ color: 'black', fontSize:20 }}/> \n         \n         \n          </View>\n          <View style={{flexWrap:'wrap' ,flexDirection:'row', flex:1, backgroundColor:\"blue\", justifyContent:\"space-evenly\", alignItems:\"center\", alignContent:'space-around',}}>\n         \n          <View style={{marginTop:90}}>\n          <Speedometer\n                value={54}\n                max={100}\n                angle={160}\n                fontFamily='squada-one'\n                accentColor=\"#03fc3d\"\n              >\n\n                <Background angle={180} color=\"#fff\" />\n                <Arc/>\n              <Needle color=\"#03fc3d\"/>\n                <Progress/>\n                {/* <Marks lineColor=\"black\" fill=\"black\" /> */}\n                <Marks step={10} lineSize={20}>\n                      {(mark, i) => (\n                        <G key={i}>\n                          {mark.isEven && (\n                            <SvgText\n                              {...mark.textProps}\n                              textAnchor=\"middle\"\n                              alignmentBaseline=\"middle\"\n                              fontSize={18}\n                              opacity={0.6}\n                              fill=\"#03fc3d\"\n                              \n                            >\n                              {mark.value}\n                            </SvgText>\n                          )}\n                          <Line\n                            {...mark.coordinates}\n                            stroke=\"#03fc3d\"\n                            strokeOpacity={1}\n                            strokeWidth={5}\n                          />\n                        </G>\n                      )}\n                    </Marks>\n                    <Indicator>\n    {(value, textProps) => (\n      <SvgText\n        {...textProps}\n        fontSize={30}\n        fill=\"#black\"\n        x={250 / 2}\n        y={170}\n        textAnchor=\"middle\"\n        fontFamily='squada-one'\n        color=\"black\"\n      >\n        {value}k/m\n      </SvgText>\n    )}\n  </Indicator>\n          </Speedometer> \n\n          </View>\n\n\n          <BasicSpeedometer value={90} totalValue={100} internalColor=\"#03fc3d\" showText text=\"70 k/m\" textStyle={{ color: 'black', fontSize:20 }}/> \n            </View>\n            <View style={{flexWrap:'wrap' ,flexDirection:'row', flex:1, backgroundColor:\"white\", justifyContent:\"space-evenly\", alignItems:\"center\",}}>\n            <View>\n\n\n            <Speedometer\n      value={-10}\n      min={-50}\n      max={50}\n      angle={320}\n      accentColor=\"#03fc3d\"\n\n    >\n      <Background\n        color=\"#fff\"\n        opacity={0.3}\n      />\n      <Progress/>\n      <Marks step={5}>\n        {(mark, i) => (\n          <G key={i}>\n            {mark.isEven && (\n              <SvgText\n                {...mark.textProps}\n                textAnchor=\"middle\"\n                alignmentBaseline=\"middle\"\n                fontSize={18}\n                opacity={0.6}\n                fill=\"black\"\n                \n              >\n                {mark.value}°\n              </SvgText>\n            )}\n            <Line\n              {...mark.coordinates}\n              stroke=\"black\"\n              strokeOpacity={0.4}\n            />\n          </G>\n        )}\n      </Marks>\n      <Needle baseOffset={-30} circleRadius={0} color=\"#03fc3d\" offset={50} />\n      <Indicator>\n        {(value, textProps) => (\n          <SvgText\n            {...textProps}\n            fontSize={40}\n            x={center}\n            y={center + 10}\n            textAnchor=\"middle\"\n            alignmentBaseline=\"middle\"\n          >\n            {value}°\n          </SvgText>\n        )}\n      </Indicator>\n    </Speedometer>\n\n            </View>\n\n          <BasicSpeedometer value={90} totalValue={100} internalColor=\"#03fc3d\" showText text=\"70 k/m\" textStyle={{ color: 'black', fontSize:20 }}/> \n            </View>\n \n        </View>\n        <View style={{flex:0.8, backgroundColor:\"green\" , justifyContent:\"center\", alignItems:\"center\",}}>\n        <TouchableOpacity>\n        <MaterialIcons name=\"double-arrow\" size={50} color=\"black\"  style={{ transform:[{rotate: '270deg'}]}}/>\n       </TouchableOpacity>\n \n</View>\n<View style={{flex:4.2, backgroundColor:\"orange\" }}>\n<TouchableOpacity>\n        <MaterialIcons name=\"keyboard-arrow-up\" size={50} color=\"black\" />  \n        </TouchableOpacity>\n \n</View>\n        \n        </View>\n      \n    </View>\n\n\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n\n\nflex: 1,\n  },\n  topBar: {\n  flex:1,\n  flexWrap:\"wrap\",\n  backgroundColor: '#03fc3d',\n  justifyContent: 'center',\n    \n  },\n  bottom:{\nflex:3,\nbackgroundColor: '#fff',\nalignItems: 'center',\njustifyContent: 'center',\n  },\n \n  \n});\n"]},"metadata":{},"sourceType":"module"}