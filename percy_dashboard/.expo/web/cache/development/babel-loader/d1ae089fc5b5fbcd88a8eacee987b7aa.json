{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport BasicSpeedometer from 'react-native-speedometer-chart';\nimport { Line, Text as SvgText, G } from 'react-native-svg';\nimport RNSpeedometer from 'react-native-speedometer';\nimport Speedometer, { Background, Arc, Needle, Progress, Marks, Indicator, DangerPath } from 'react-native-cool-speedometer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var center = 250 / 2;\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: [_jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.topBar,\n        children: _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\"\n          },\n          children: [_jsx(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsx(Text, {\n              style: {\n                color: \"#fff\",\n                fontSize: 70,\n                fontWeight: '500'\n              },\n              children: \"Percy Dashboard\"\n            })\n          }), _jsx(View, {\n            style: {\n              flex: 1,\n              alignItems: \"flex-end\"\n            },\n            children: _jsxs(View, {\n              style: {\n                flex: 1,\n                flexDirection: \"row\",\n                paddingEnd: 40\n              },\n              children: [_jsxs(View, {\n                style: {\n                  alignItems: \"center\",\n                  paddingEnd: 50\n                },\n                children: [_jsxs(Text, {\n                  style: {\n                    color: \"#fff\",\n                    fontSize: 30,\n                    fontWeight: '400',\n                    textAlign: 'center'\n                  },\n                  children: [\"Number of \", '\\n', \"Crops Targeted:\"]\n                }), _jsxs(View, {\n                  style: {\n                    flexDirection: \"row\"\n                  },\n                  children: [_jsx(MaterialCommunityIcons, {\n                    name: \"tree\",\n                    size: 50,\n                    color: \"white\",\n                    style: {\n                      alignContent: 'flex-end'\n                    }\n                  }), _jsx(Text, {\n                    style: {\n                      color: \"#fff\",\n                      fontSize: 30\n                    },\n                    children: \"    1\"\n                  })]\n                })]\n              }), _jsxs(View, {\n                style: {\n                  alignItems: \"center\"\n                },\n                children: [_jsxs(Text, {\n                  style: {\n                    color: \"#fff\",\n                    fontSize: 30,\n                    fontWeight: '400',\n                    textAlign: 'center'\n                  },\n                  children: [\"Battery \", '\\n', \"100%:\"]\n                }), _jsx(View, {\n                  style: {\n                    flexDirection: \"row\"\n                  },\n                  children: _jsx(MaterialCommunityIcons, {\n                    name: \"battery-outline\",\n                    size: 50,\n                    color: \"white\"\n                  })\n                })]\n              })]\n            })\n          })]\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 5,\n          backgroundColor: \"#fff\"\n        },\n        children: _jsxs(View, {\n          style: {\n            paddingTop: 10\n          },\n          children: [_jsxs(Speedometer, {\n            value: 54,\n            max: 100,\n            angle: 160,\n            fontFamily: \"squada-one\",\n            accentColor: \"#03fc3d\",\n            children: [_jsx(Background, {\n              angle: 180,\n              color: \"#fff\"\n            }), _jsx(Arc, {}), _jsx(Needle, {\n              color: \"#03fc3d\"\n            }), _jsx(Progress, {}), _jsx(Marks, {\n              step: 10,\n              lineSize: 20,\n              children: function children(mark, i) {\n                return _jsxs(G, {\n                  children: [mark.isEven && _jsx(SvgText, _objectSpread(_objectSpread({}, mark.textProps), {}, {\n                    textAnchor: \"middle\",\n                    alignmentBaseline: \"middle\",\n                    fontSize: 18,\n                    opacity: 0.6,\n                    fill: \"#03fc3d\",\n                    children: mark.value\n                  })), _jsx(Line, _objectSpread(_objectSpread({}, mark.coordinates), {}, {\n                    stroke: \"#03fc3d\",\n                    strokeOpacity: 1,\n                    strokeWidth: 5\n                  }))]\n                }, i);\n              }\n            }), _jsx(Indicator, {\n              children: function children(value, textProps) {\n                return _jsxs(SvgText, _objectSpread(_objectSpread({}, textProps), {}, {\n                  fontSize: 30,\n                  fill: \"#black\",\n                  x: 250 / 2,\n                  y: 210,\n                  textAnchor: \"middle\",\n                  fontFamily: \"squada-one\",\n                  color: \"black\",\n                  children: [value, \"k/m\"]\n                }));\n              }\n            })]\n          }), _jsxs(Speedometer, {\n            value: -10,\n            min: -50,\n            max: 50,\n            angle: 320,\n            accentColor: \"#03fc3d\",\n            children: [_jsx(Background, {\n              color: \"#fff\",\n              opacity: 0.3\n            }), _jsx(Progress, {}), _jsx(Marks, {\n              step: 5,\n              children: function children(mark, i) {\n                return _jsxs(G, {\n                  children: [mark.isEven && _jsxs(SvgText, _objectSpread(_objectSpread({}, mark.textProps), {}, {\n                    textAnchor: \"middle\",\n                    alignmentBaseline: \"middle\",\n                    fontSize: 18,\n                    opacity: 0.6,\n                    fill: \"black\",\n                    children: [mark.value, \"\\xB0\"]\n                  })), _jsx(Line, _objectSpread(_objectSpread({}, mark.coordinates), {}, {\n                    stroke: \"black\",\n                    strokeOpacity: 0.4\n                  }))]\n                }, i);\n              }\n            }), _jsx(Needle, {\n              baseOffset: -30,\n              circleRadius: 0,\n              color: \"#03fc3d\",\n              offset: 50\n            }), _jsx(Indicator, {\n              children: function children(value, textProps) {\n                return _jsxs(SvgText, _objectSpread(_objectSpread({}, textProps), {}, {\n                  fontSize: 40,\n                  x: center,\n                  y: center + 10,\n                  textAnchor: \"middle\",\n                  alignmentBaseline: \"middle\",\n                  children: [value, \"\\xB0\"]\n                }));\n              }\n            })]\n          }), _jsx(BasicSpeedometer, {\n            value: 90,\n            totalValue: 100,\n            internalColor: \"#03fc3d\",\n            showText: true,\n            text: \"70 k/m\",\n            textStyle: {\n              color: 'black',\n              fontSize: 20\n            }\n          })]\n        })\n      })]\n    }), _jsxs(View, {\n      style: {\n        flex: 1,\n        flexDirection: \"column\",\n        flexWrap: 'nowrap'\n      },\n      children: [_jsx(RNSpeedometer, {\n        value: 50,\n        size: 100,\n        halfCircleStyle: {\n          flex: 1\n        }\n      }), _jsx(RNSpeedometer, {\n        value: 50,\n        size: 200\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  topBar: {\n    flex: 1,\n    backgroundColor: '#03fc3d',\n    justifyContent: 'center'\n  },\n  bottom: {\n    flex: 3,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/black/Documents/Uni Notes/GDP/Dashboard/percy_dashboard/App.js"],"names":["StatusBar","Ionicons","FontAwesome","MaterialCommunityIcons","BasicSpeedometer","Line","Text","SvgText","G","RNSpeedometer","Speedometer","Background","Arc","Needle","Progress","Marks","Indicator","DangerPath","App","center","flex","styles","container","topBar","flexDirection","alignItems","color","fontSize","fontWeight","paddingEnd","textAlign","alignContent","backgroundColor","paddingTop","mark","i","isEven","textProps","value","coordinates","flexWrap","StyleSheet","create","justifyContent","bottom"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, SafeAreaView, TextInput} from 'react-native';\n\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport BasicSpeedometer from 'react-native-speedometer-chart';\nimport { Line, Text as SvgText, G } from 'react-native-svg'\nimport RNSpeedometer from 'react-native-speedometer'\n\nimport Speedometer , {\n  Background,\n  Arc,\n  Needle,\n  Progress,\n  Marks,\n  Indicator,\n  DangerPath,\n} from 'react-native-cool-speedometer';\n\nexport default function App() {\n\n  const center = 250 / 2\n  return (\n    <SafeAreaView style={{flex:1}}>\n    <View style={styles.container}>\n\n<View style={styles.topBar}>\n  <View style={{flexDirection:\"row\", alignItems:\"center\"}}>\n    <View style={{flex:1, }}>\n\n  <Text style={{color:\"#fff\", fontSize:70, fontWeight:'500'}}>\n    Percy Dashboard\n  </Text>\n    </View>\n\n          <View style={{flex:1, alignItems:\"flex-end\"}}>\n            <View style={{flex:1, flexDirection:\"row\",paddingEnd:40}}> \n            <View style={{alignItems:\"center\", paddingEnd:50}}>\n\n            <Text style={{color:\"#fff\", fontSize:30, fontWeight:'400', textAlign:'center'}}>\n              Number of {'\\n'}\n              Crops Targeted:\n            </Text>\n            <View style={{flexDirection:\"row\"}}> \n            <MaterialCommunityIcons name=\"tree\" size={50} color=\"white\" style={{alignContent:'flex-end'}}/>\n            \n            <Text style={{color:\"#fff\", fontSize:30,}}>    1</Text>\n            </View>\n            </View>\n            <View style={{alignItems:\"center\"}}>\n\n            <Text style={{color:\"#fff\", fontSize:30, fontWeight:'400', textAlign:'center'}}>\n              Battery {'\\n'}\n              100%:\n            </Text>\n            <View style={{flexDirection:\"row\", }}> \n            \n            <MaterialCommunityIcons name=\"battery-outline\" size={50} color=\"white\" />    \n                    </View>\n            </View>\n            </View>\n          </View>\n     </View>\n  \n  </View>\n\n      <View style={{ flex: 5, backgroundColor: \"#fff\" }} >\n        <View style={{paddingTop:10}}>\n\n      {/* <RNSpeedometer value={50} size={100} minValue={0} /> */}\n \n       <Speedometer\n  value={54}\n  max={100}\n  angle={160}\n  fontFamily='squada-one'\n  accentColor=\"#03fc3d\"\n>\n\n  <Background angle={180} color=\"#fff\" />\n  <Arc/>\n<Needle color=\"#03fc3d\"/>\n  <Progress/>\n  {/* <Marks lineColor=\"black\" fill=\"black\" /> */}\n  <Marks step={10} lineSize={20}>\n        {(mark, i) => (\n          <G key={i}>\n            {mark.isEven && (\n              <SvgText\n                {...mark.textProps}\n                textAnchor=\"middle\"\n                alignmentBaseline=\"middle\"\n                fontSize={18}\n                opacity={0.6}\n                fill=\"#03fc3d\"\n                \n              >\n                {mark.value}\n              </SvgText>\n            )}\n            <Line\n              {...mark.coordinates}\n              stroke=\"#03fc3d\"\n              strokeOpacity={1}\n              strokeWidth={5}\n            />\n          </G>\n        )}\n      </Marks>\n  <Indicator>\n    {(value, textProps) => (\n      <SvgText\n        {...textProps}\n        fontSize={30}\n        fill=\"#black\"\n        x={250 / 2}\n        y={210}\n        textAnchor=\"middle\"\n        fontFamily='squada-one'\n        color=\"black\"\n      >\n        {value}k/m\n      </SvgText>\n    )}\n  </Indicator>\n</Speedometer> \n\n\n<Speedometer\n      value={-10}\n      min={-50}\n      max={50}\n      angle={320}\n      accentColor=\"#03fc3d\"\n\n    >\n      <Background\n        color=\"#fff\"\n        opacity={0.3}\n      />\n      <Progress/>\n      <Marks step={5}>\n        {(mark, i) => (\n          <G key={i}>\n            {mark.isEven && (\n              <SvgText\n                {...mark.textProps}\n                textAnchor=\"middle\"\n                alignmentBaseline=\"middle\"\n                fontSize={18}\n                opacity={0.6}\n                fill=\"black\"\n                \n              >\n                {mark.value}°\n              </SvgText>\n            )}\n            <Line\n              {...mark.coordinates}\n              stroke=\"black\"\n              strokeOpacity={0.4}\n            />\n          </G>\n        )}\n      </Marks>\n      <Needle baseOffset={-30} circleRadius={0} color=\"#03fc3d\" offset={50} />\n      <Indicator>\n        {(value, textProps) => (\n          <SvgText\n            {...textProps}\n            fontSize={40}\n            x={center}\n            y={center + 10}\n            textAnchor=\"middle\"\n            alignmentBaseline=\"middle\"\n          >\n            {value}°\n          </SvgText>\n        )}\n      </Indicator>\n    </Speedometer>\n\n<BasicSpeedometer value={90} totalValue={100} internalColor=\"#03fc3d\" showText text=\"70 k/m\" textStyle={{ color: 'black', fontSize:20 }}/> \n\n        </View>\n        \n        </View>\n      \n    </View>\n\n<View style={{flex:1, flexDirection:\"column\",flexWrap:'nowrap',}}>\n\n        <RNSpeedometer value={50} size={100} halfCircleStyle={{flex:1}} />\n        <RNSpeedometer value={50} size={200} />\n\n</View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n\n\nflex: 1,\n  },\n  topBar: {\n  flex:1,\n  \n  backgroundColor: '#03fc3d',\n  justifyContent: 'center',\n    \n  },\n  bottom:{\nflex:3,\nbackgroundColor: '#fff',\nalignItems: 'center',\njustifyContent: 'center',\n  },\n \n  \n});\n"]},"metadata":{},"sourceType":"module"}