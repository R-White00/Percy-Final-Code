{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PropTypes from 'prop-types';\nimport { getStyles } from \"./rules\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar BasicSpeedometer = function BasicSpeedometer(props) {\n  var value = props.value,\n      totalValue = props.totalValue,\n      style = props.style,\n      innerCircleStyle = props.innerCircleStyle,\n      outerCircleStyle = props.outerCircleStyle,\n      halfCircleStyle = props.halfCircleStyle,\n      showText = props.showText,\n      text = props.text,\n      textStyle = props.textStyle,\n      showLabels = props.showLabels,\n      labelStyle = props.labelStyle,\n      labelTextStyle = props.labelTextStyle,\n      labelFormatter = props.labelFormatter,\n      showPercent = props.showPercent,\n      percentStyle = props.percentStyle,\n      showIndicator = props.showIndicator;\n  var percentValue = parseInt(String(value * 100 / totalValue).split('.')[0]);\n  var degreesValue = value > totalValue ? totalValue : value;\n  var degrees = degreesValue * 180 / (totalValue === 0 ? 1 : totalValue) - 90;\n  var styles = getStyles(props, degrees, degreesValue);\n  var percentElement = showPercent ? _jsxs(Text, {\n    style: [styles.percentText, percentStyle],\n    numberOfLines: 1,\n    children: [percentValue, \"%\"]\n  }) : null;\n  var textElement = showText && text ? _jsx(Text, {\n    style: [styles.text, textStyle],\n    numberOfLines: 1,\n    children: text\n  }) : null;\n  var labelsElement = showLabels ? _jsxs(View, {\n    style: [styles.labelsView, labelStyle],\n    children: [_jsx(Text, {\n      style: labelTextStyle,\n      numberOfLines: 1,\n      children: labelFormatter(0)\n    }), _jsx(Text, {\n      style: labelTextStyle,\n      numberOfLines: 1,\n      children: labelFormatter(totalValue)\n    })]\n  }) : null;\n  var indicadorElement = !showText && !showPercent && showIndicator && totalValue ? _jsx(View, {\n    style: styles.indicator,\n    children: _jsx(View, {\n      style: styles.pointIndicator\n    })\n  }) : null;\n  return _jsxs(View, {\n    style: [styles.content, style],\n    children: [_jsxs(View, {\n      style: [styles.outerCircle, outerCircleStyle],\n      children: [_jsx(View, {\n        style: [styles.halfCircle, halfCircleStyle]\n      }), _jsxs(View, {\n        style: [styles.innerCircle, innerCircleStyle],\n        children: [percentElement, textElement]\n      })]\n    }), indicadorElement, labelsElement]\n  });\n};\n\nBasicSpeedometer.propTypes = {\n  value: PropTypes.number.isRequired,\n  totalValue: PropTypes.number.isRequired,\n  size: PropTypes.number,\n  outerColor: PropTypes.string,\n  innerColor: PropTypes.string,\n  internalColor: PropTypes.string,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)]),\n  showText: PropTypes.bool,\n  text: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  textStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)]),\n  showLabels: PropTypes.bool,\n  labelStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)]),\n  labelFormatter: PropTypes.func,\n  labelTextStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)]),\n  showPercent: PropTypes.bool,\n  percentStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)]),\n  innerCircleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)]),\n  outerCircleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)]),\n  halfCircleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)]),\n  percentSize: PropTypes.number,\n  showIndicator: PropTypes.bool,\n  indicatorColor: PropTypes.string\n};\nBasicSpeedometer.defaultProps = {\n  size: 200,\n  outerColor: '#e6e6e6',\n  innerColor: '#ffffff',\n  internalColor: '#2eb82e',\n  style: {},\n  showText: false,\n  text: '',\n  textStyle: {},\n  showLabels: false,\n  labelStyle: {},\n  labelFormatter: function labelFormatter(number) {\n    return number;\n  },\n  labelTextStyle: {},\n  showPercent: false,\n  percentStyle: {},\n  innerCircleStyle: {},\n  outerCircleStyle: {},\n  halfCircleStyle: {},\n  percentSize: 0.5,\n  showIndicator: false,\n  indicatorColor: 'grey'\n};\nexport default BasicSpeedometer;","map":{"version":3,"sources":["C:/Users/black/Documents/Uni Notes/GDP/Dashboard/percy_dashboard/node_modules/react-native-speedometer-chart/src/index.js"],"names":["React","PropTypes","getStyles","BasicSpeedometer","props","value","totalValue","style","innerCircleStyle","outerCircleStyle","halfCircleStyle","showText","text","textStyle","showLabels","labelStyle","labelTextStyle","labelFormatter","showPercent","percentStyle","showIndicator","percentValue","parseInt","String","split","degreesValue","degrees","styles","percentElement","percentText","textElement","labelsElement","labelsView","indicadorElement","indicator","pointIndicator","content","outerCircle","halfCircle","innerCircle","propTypes","number","isRequired","size","outerColor","string","innerColor","internalColor","oneOfType","object","arrayOf","bool","func","percentSize","indicatorColor","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text } from 'react-native';\nimport PropTypes from 'prop-types';\nimport { getStyles } from './rules';\n\nconst BasicSpeedometer = (props) => {\n  const { value, totalValue, style, innerCircleStyle, outerCircleStyle, halfCircleStyle, showText, text, textStyle, showLabels, labelStyle, labelTextStyle, labelFormatter, showPercent, percentStyle, showIndicator } = props;\n\n  const percentValue = parseInt(String((value * 100) / totalValue).split('.')[0]);\n  const degreesValue = (value > totalValue) ? totalValue : value;\n  const degrees = ((degreesValue * 180) / ((totalValue === 0) ? 1 : totalValue)) - 90;\n\n  const styles = getStyles(props, degrees, degreesValue);\n\n  const percentElement = (showPercent) ? (\n    <Text style={[styles.percentText, percentStyle]} numberOfLines={1}>{percentValue}%</Text>\n  ) : null;\n\n  const textElement = ((showText) && (text)) ? (\n    <Text style={[styles.text, textStyle]} numberOfLines={1}>{text}</Text>\n  ) : null;\n\n  const labelsElement = (showLabels) ? (\n    <View style={[styles.labelsView, labelStyle]}>\n      <Text style={labelTextStyle} numberOfLines={1}>{labelFormatter(0)}</Text>\n      <Text style={labelTextStyle} numberOfLines={1}>{labelFormatter(totalValue)}</Text>\n    </View>\n  ) : null;\n\n  const indicadorElement = ((!showText) && (!showPercent) && (showIndicator) && (totalValue)) ? (\n    <View style={styles.indicator}>\n      <View style={styles.pointIndicator} />\n    </View>\n  ) : null;\n\n  return (\n    <View style={[styles.content, style]}>\n      <View style={[styles.outerCircle, outerCircleStyle]}>\n        <View style={[styles.halfCircle, halfCircleStyle]}/>\n        <View style={[styles.innerCircle, innerCircleStyle]}>\n          {percentElement}\n          {textElement}\n        </View>\n      </View>\n      {indicadorElement}\n      {labelsElement}\n    </View>\n  );\n};\n\nBasicSpeedometer.propTypes = {\n  value: PropTypes.number.isRequired,\n  totalValue: PropTypes.number.isRequired,\n  size: PropTypes.number,\n  outerColor: PropTypes.string,\n  innerColor: PropTypes.string,\n  internalColor: PropTypes.string,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.arrayOf(PropTypes.object),\n  ]),\n  showText: PropTypes.bool,\n  text: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  textStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.arrayOf(PropTypes.object),\n  ]),\n  showLabels: PropTypes.bool,\n  labelStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.arrayOf(PropTypes.object),\n  ]),\n  labelFormatter: PropTypes.func,\n  labelTextStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.arrayOf(PropTypes.object),\n  ]),\n  showPercent: PropTypes.bool,\n  percentStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.arrayOf(PropTypes.object),\n  ]),\n  innerCircleStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.arrayOf(PropTypes.object),\n  ]),\n  outerCircleStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.arrayOf(PropTypes.object),\n  ]),\n  halfCircleStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.arrayOf(PropTypes.object),\n  ]),\n  percentSize: PropTypes.number,\n  showIndicator: PropTypes.bool,\n  indicatorColor: PropTypes.string,\n};\n\nBasicSpeedometer.defaultProps = {\n  size: 200,\n  outerColor: '#e6e6e6',\n  innerColor: '#ffffff',\n  internalColor: '#2eb82e',\n  style: {},\n  showText: false,\n  text: '',\n  textStyle: {},\n  showLabels: false,\n  labelStyle: {},\n  labelFormatter: number => number,\n  labelTextStyle: {},\n  showPercent: false,\n  percentStyle: {},\n  innerCircleStyle: {},\n  outerCircleStyle: {},\n  halfCircleStyle: {},\n  percentSize: 0.5,\n  showIndicator: false,\n  indicatorColor: 'grey'\n};\n\nexport default BasicSpeedometer;\n"]},"metadata":{},"sourceType":"module"}